import {Subject} from "rxjs/Subject";

export class CategoryComponent implements OnInit,OnDestroy {

    unsubscribe: Subject<void> = new Subject<void>();

    categories:Category[] = [];
    currentCategoryId = 1;
    currentCategory:Category;
    currentCategoryRemoveId = 1;
    currentCategoryRemove:Category;

    constructor(
        private categoriesService: CategoriesService,
        private toastrService: ToastrService
    ) { }

    ngOnInit() {
        this.getCategory();
        this.onCategoryCange();
    }

    ngOnDestroy(){
        this.unsubscribe.next();
    }

    getCategory(){
        this.categoriesService.getCategories()
            .takeUntil(this.unsubscribe)
            .subscribe(
                (categories: Category[]) => this.categories = categories,
                (error) => this.toastrService.error('Error!'),
            )
    }

    onCreateCategory(form: NgForm){
        let name = form.value.name;
        const category = new Category(name);

        this.categoriesService.addCategory(category)
            .takeUntil(this.unsubscribe)
            .subscribe(
                (category: Category) => this.successCreateCategory(category),
                (error) => this.toastrService.error('Error!'),
                () => form.reset()
            );
    }

    successCreateCategory(category: Category){
        this.categories.push(category);
        this.toastrService.success('Категорія добавлена');
    }

    successEditCategory(){
        // Цю хрень треба винести окремим методом
        const idx = this.categories.findIndex(
            c => c.id === category.id);

        this.categories[idx] = category;
        this.toastrService.success('Категорія відредагована');
    }

    //Дивна логіка це все має бекенд робити

    onCategoryRemov(){
        this.currentCategoryRemove = this.categories
            .find(c => c.id === +this.currentCategoryRemoveId);
    }

    //Дивна логіка це все має бекенд робити
    onCategoryCange(){
        this.currentCategory = this.categories
            .find(c => c.id === +this.currentCategoryId);
    }

    onEditCategory(formedit: NgForm){
        let name = formedit.value.Name;
        let category = new Category(name,this.currentCategoryId);

         this.categoriesService.updateCategory(category)
            .takeUntil(this.unsubscribe)
            .subscribe(
                (category: Category) => this.successEditCategory(),
                (error) => this.toastrService.error('Error!'),
            );
    }

    //Цей метод тре переписати тут самий гавнокол
    onCategoryRemove(formremove: NgForm){

        const name = this.currentCategoryRemove.name;
        const id = this.currentCategoryRemove.id;
        let category = new Category(name,id);



        if(formremove.value.removcomf === true){

            this.categoriesService.removeCategory(category)
                .takeUntil(this.unsubscribe)
                .subscribe(
                    () =>  this.toastrService.success('Категорія видалена'),
                    (error) => this.toastrService.error('Error!')
            )

            this.currentCategoryRemoveId = 0;

            this.categories= this.categories.filter(c => {
                return c.id !== category.id;
            });
        }

        this.toastrService.success('Категорія видалена');
    }

}
